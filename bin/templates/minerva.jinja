{#
    Copyright (C) 2015  Ryan M Cote.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

    Author: Ryan M Cote <minervaconsole@gmail.com>
#}
{%- if 'Database' in config %}
Database:
  db:
    url: {{config.Database.db.url}}
    port: {{config.Database.db.port}}
    useSSL: {{ config.Database.db.useSSL }}
    {%- if config.Database.db.useSSL %}
    ssl_certfile: {{ config.Database.db.ssl_certfile }}
    ssl_ca_certs: {{ config.Database.db.ssl_ca_certs }}
    {%- endif %}
    useAuth: {{config.Database.db.useAuth}}
    {%- if config.Database.db.useAuth %}
    AuthType: {{config.Database.db.AuthType}}
    {%- if config.Database.db.AuthType == 'X509' %}
    x509Subject: {{ config.Database.db.x509Subject }}
    auth_cert: {{config.Database.db.auth_cert}}
    {%- else  %}
    username: {{config.Database.db.username}}
    password: {{config.Database.db.password}}
    PW_Mechanism: {{config.Database.db.PW_Mechanism}}
    {%- endif %}
    {%- endif %}
    {%- if 'session_timeout' in config.Database.web.keys() %}
    SESSION_KEY: "{{config.Database.db.SESSION_KEY}}"
    {%- endif %}
  events:
    max_age: {{config.Database.events.max_age}}
    flow_max_age: {{config.Database.events.flow_max_age}}
    dns_max_age: {{config.Database.events.dns_max_age}}
    temp_filter_age: {{config.Database.events.temp_filter_age}}

{%- endif %}
{%- if 'Webserver' in config %}
Webserver:
  web:
    hostname: {{config.Webserver.web.hostname}}
    bindIp: {{config.Webserver.web.bindIp}}
    port: {{config.Webserver.web.port}}
    threads: {{config.Webserver.web.threads}}
    pcap_timeout: {{config.Webserver.web.pcap_timeout}}
    certs:
      webserver_cert: {{config.Webserver.web.certs.webserver_cert}}
      webserver_key: {{config.Webserver.web.certs.webserver_key}}
    motd: {{config.Webserver.web.motd}}
    session_timeout: {{config.Webserver.web.session_timeout}}
    password_requirements:
      password_tries: {{config.Webserver.web.password_requirements.password_tries}}
      password_min_length: {{config.Webserver.web.password_requirements.password_min_length}}
      password_max_age: {{config.Webserver.web.password_requirements.password_max_age}}
      lower_count: {{ config.Webserver.web.password_requirements.lower_count }}
      upper_count: {{ config.Webserver.web.password_requirements.upper_count }}
      digit_count: {{ config.Webserver.web.password_requirements.digit_count }}
      special_count: {{ config.Webserver.web.password_requirements.special_count }}
  events:
    maxResults: {{config.Webserver.events.maxResults}}
{%- endif %}
{%- if 'Event_Receiver' in config %}
Event_Receiver:
  listen_ip:
    {%- for ip in config.Event_Receiver.listen_ip.keys() %}
    {{ip}}:
         pub_port: {{config.Event_Receiver.listen_ip[ip]['pub_port']}}
         rec_ports:
             {%- for port in config.Event_Receiver.listen_ip[ip]['recv_ports'] %}
             - {{port}}
             {%- endfor %}
         {%- endfor %}
  worker_threads: {{config.Event_Receiver.worker_threads}}
  watchlist_update_sec: {{config.Event_Receiver.watchlist_update}}
  certs:
    server_cert: {{config.Event_Receiver.certs.server_cert}}
    private_key: {{config.Event_Receiver.certs.private_key}}
{%- endif %}
{%- if 'Agent_forwarder' in config %}
Agent_forwarder:
  sensor_name: {{config.Agent_forwarder.sensor_name}}
  client_cert: {{config.Agent_forwarder.client_cert}}
  client_private: {{config.Agent_forwarder.client_private}}
  logfiles:
    {%- for lf in config.Agent_forwarder.logfiles %}
    {{lf}}:
      {%- for i in config.Agent_forwarder.logfiles[lf].keys() %}
      {{i}}: {{config.Agent_forwarder.logfiles[lf][i]}}
      {%- endfor %}
    {%- endfor %}
  subscriptions:
    {% for dest in config.Agent_forwarder.destinations.keys() %}
    {{dest}}: {{config.Agent_forwarder.destinations[dest]['sub_port']}}
    {%- endfor %}
  publishers:
    {%- for dest in config.Agent_forwarder.destinations.keys() %}
    {{dest}}:
        {%- for port in config.Agent_forwarder.destinations[dest]['pub_ports'] %}
        - {{port}}
        {%- endfor %}
    {%- endfor %}
  send_batch: {{config.Agent_forwarder.send_batch}}
  send_wait: {{config.Agent_forwarder.send_wait}}
  fail_wait: {{config.Agent_forwarder.fail_wait}}
  worker_threads: {{ config.Agent_forwarder.worker_threads }}
  pcap:
    max_packets: {{config.Agent_forwarder.pcap.max_packets}}
    max_size: {{config.Agent_forwarder.pcap.max_size}}
    max_files: {{ config.Agent_forwarder.pcap.max_files}}
    thres_time: {{ config.Agent_forwarder.pcap.thres_time}}
    prefix:  {{ config.Agent_forwarder.pcap.prefix}}
    suffix: {{ config.Agent_forwarder.pcap.suffix}}
    pcap_directory: {{ config.Agent_forwarder.pcap.pcap_directory }}
    temp_directory: {{ config.Agent_forwarder.pcap.temp_directory }}
{%- endif %}
Logger:
  logDir: {{config.Logger.directory}}
  level: {{config.Logger.level}}
  maxSize: {{config.Logger.size}}
  maxCount: {{config.Logger.count}}
